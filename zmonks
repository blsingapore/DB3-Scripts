import java.awt.Graphics2D;
import org.dreambot.api.script.AbstractScript;
import org.dreambot.api.script.Category;
import org.dreambot.api.script.ScriptManifest;
import org.dreambot.api.script.impl.TaskScript; //Remove based on above
import org.dreambot.api.utilities.Timer;
import org.dreambot.api.wrappers.interactive.GameObject;
import org.dreambot.api.Client;
import org.dreambot.api.input.Mouse;
import org.dreambot.api.methods.Calculations;
import org.dreambot.api.methods.MethodProvider;
import org.dreambot.api.methods.combat.Combat;
import org.dreambot.api.methods.container.impl.Inventory;
import org.dreambot.api.methods.container.impl.bank.Bank;
import org.dreambot.api.methods.container.impl.equipment.Equipment;
import org.dreambot.api.methods.grandexchange.GrandExchange;
import org.dreambot.api.methods.interactive.GameObjects;
import org.dreambot.api.methods.interactive.NPCs;
import org.dreambot.api.methods.interactive.Players;
import org.dreambot.api.methods.item.GroundItems;
import org.dreambot.api.methods.magic.Magic;
import org.dreambot.api.methods.map.Area;
import org.dreambot.api.methods.map.Map;
import org.dreambot.api.methods.settings.PlayerSettings;
import org.dreambot.api.methods.skills.Skills;
import org.dreambot.api.methods.tabs.Tabs;
import org.dreambot.api.methods.trade.Trade;
import org.dreambot.api.methods.walking.impl.Walking;
import org.dreambot.api.methods.widget.Widgets;
import org.dreambot.api.methods.worldhopper.WorldHopper;

@ScriptManifest(author = "Beefsteak", description = "Kills Zammy Monks.", name = "ZMonks", category = Category.COMBAT, version = 0.1)
public class ZMonks extends AbstractScript {

	public void onStart() {

		log("Welcome to Zmonks");
		startTime = new Timer();

	}

	private Timer startTime;

	Area BANK = new Area(2943, 3369, 2949, 3368);
	Area MONKS = new Area(2929, 3512, 2941, 3518);

	public enum State {
		FIGHTING("Fighting"), BANKING("Banking"), WINE("Wine"), IDLE("Idle");

		private String state;

		State(String state) {
			this.state = state;
		}

		public String getState() {
			return state;
		}

		public void onPaint(Graphics2D g) {
			g.drawString("State: " + getState(), 12, 77);
		}
	}

	@Override
public int onLoop() {
	  
		 State state = getState();
		  
		  switch (state) {
	  
		    case BANKING:
		    	log("Banking");
		    	if (Inventory.isFull() && !Players.localPlayer().isInCombat()) {
		    		Walking.walkOnScreen(BANK.getRandomTile());
					GameObject depositbox = GameObjects.closest("Bank deposit box");
						if (depositbox != null && Inventory.isFull()) {	
						depositbox.interact("Deposit");
						sleepUntil(() -> DepositBox.isOpen(),Calculations.random(8000, 10000));
						sleep(Calculations.random(300, 500));			
							DepositBox.depositAllItems();
							sleep(Calculations.random(300, 500));	
							DepositBox.close();
					Walking.walkOnScreen(MONKS.getRandomTile());
					sleepUntil(() -> Players.localPlayer().isMoving(), Calculations.random(1000, 2000));
						}
		    	
					break;

		    case FIGHTING:
		    	log("Fighting");
		    	NPCs zmonk = NPCs.closest(q -> q != null && q.getName().equals("Monk of Zamorak") && !q.isInCombat() && q.hasAction("Attack"));
		    	GroundItems robe = GroundItems().getClosest("Zamorak monk bottom", "Zamorak monk top");
		    	if (MONKS.getArea().contains(Players.localPlayer())) {
		    		if (zmonk != null) {
		    			if (!zmonk.isInteractedWith() && !Players.localPlayer().isInCombat()) {
		    				zmonk.interact("Attack");
		    				Mouse.moveMouseOutsideScreen();
		    				if (Combat.getHealthPercent()<= (Calculations.random(50,75))) {
		    				 	 Inventory().interact("Trout", "Eat");
		    				 	sleepUntil(() -> !Players.localPlayer().isAnimating(), 2000);
		    				 	 if (robe != null && robe.isOnScreen()) {
		    				 		 robe.interact("Take");
						             sleepUntil(() -> !Players.localPlayer().isAnimating(), 4000);
		    				 	 }
		    				}
		    			}
		    		}
		    } else {
		    	Walking.walkOnScreen(MONKS.getRandomTile());
				sleepUntil(() -> Players.localPlayer().isMoving(), Calculations.random(1000, 2000));
		    }
		    	
		    break;
		    
		    case WINE:
		    	log("Looting Wine");
		    	GroundItems wine = GroundItems().getClosest("Wine of zamorak");
		    	if (!Players.localPlayer().isAnimating()) {
		    		if (wine != null){
		    		wine.interact("Take");
		    		sleepUntil(() -> (!Players.localPlayer().isAnimating()), Calculations.random(1000, 2000));
		    		}
		    break;   	
		  }
   	    
		    case IDLE:
		    	log("Idling");
		    	}
		  }

	public State getState() {
	NPCs zmonk = NPCs.closest(q -> q != null && q.getName().equals("Monk of Zamorak") && !q.isInCombat()&& q.hasAction("Attack"));
	GroundItems wine = GroundItems().getClosest("Wine of zamorak");
		if (MONKS.getArea().contains(Players.localPlayer()) && (zmonk = null))
				if(wine != null){{    							
			return State.WINE;

		if (Players.localPlayer() != null && MONKS.getArea().contains(Players.localPlayer()))
			if (zmonk != null)
		return State.FIGHTING;   
		
		if (Inventory.isFull() || !(Inventory.contains("Trout")));
			return State.BANKING;	
			
	} else {
		
		return State.IDLE;
		}		
		}	
	}
}
